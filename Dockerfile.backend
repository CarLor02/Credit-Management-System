FROM nvidia/cuda:12.4.1-cudnn-runtime-ubuntu22.04

RUN apt-get update && apt-get install -y python3 python3-pip && \
    ln -sf /usr/bin/python3 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip

RUN apt-get install -y \
    libglib2.0-0 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libgdk-pixbuf-2.0-0 \
    libffi-dev \
    shared-mime-info \
    libcairo2 \
    libcairo-gobject2

WORKDIR /app

COPY generated_backend/requirements.txt ./generated_backend/requirements.txt
COPY OCR/requirements.txt ./OCR/requirements.txt

RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r generated_backend/requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple && \
    pip install --no-cache-dir -r OCR/requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple

# 安装中文字体支持，解决PDF乱码问题
RUN apt-get install -y \
    fonts-noto-cjk \
    fonts-noto-cjk-extra \
    fonts-wqy-zenhei \
    fonts-wqy-microhei \
    fontconfig

COPY generated_backend ./generated_backend
COPY OCR ./OCR

# 复制前端logo文件到容器中，解决HTML和PDF预览中logo无法显示的问题
COPY frontend/logo.jpg ./frontend/logo.jpg

# 确保环境配置文件被复制
COPY generated_backend/.env.production ./generated_backend/.env.production

# 更新字体缓存，确保中文字体正确加载
RUN fc-cache -f -v

WORKDIR /app/generated_backend

# 设置环境变量
ENV FLASK_ENV=production
ENV PYTHONPATH=/app

# 内存优化环境变量
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV MALLOC_TRIM_THRESHOLD_=100000
ENV FLASK_ENV=production

# 使用专门的Gunicorn配置文件启动
CMD ["gunicorn", "--config", "gunicorn_config.py", "app:app"]

